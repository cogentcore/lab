// Code generated by 'yaegi extract cogentcore.org/lab/tensorcore'. DO NOT EDIT.

package labcoresymbols

import (
	"cogentcore.org/lab/tensorcore"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/lab/tensorcore/tensorcore"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AddGridStylerTo":    reflect.ValueOf(tensorcore.AddGridStylerTo),
		"GetGridStylersFrom": reflect.ValueOf(tensorcore.GetGridStylersFrom),
		"NewGridStyle":       reflect.ValueOf(tensorcore.NewGridStyle),
		"NewTable":           reflect.ValueOf(tensorcore.NewTable),
		"NewTableButton":     reflect.ValueOf(tensorcore.NewTableButton),
		"NewTensorButton":    reflect.ValueOf(tensorcore.NewTensorButton),
		"NewTensorEditor":    reflect.ValueOf(tensorcore.NewTensorEditor),
		"NewTensorGrid":      reflect.ValueOf(tensorcore.NewTensorGrid),
		"SetGridStylersTo":   reflect.ValueOf(tensorcore.SetGridStylersTo),

		// type definitions
		"GridStyle":    reflect.ValueOf((*tensorcore.GridStyle)(nil)),
		"GridStylers":  reflect.ValueOf((*tensorcore.GridStylers)(nil)),
		"Layout":       reflect.ValueOf((*tensorcore.Layout)(nil)),
		"Table":        reflect.ValueOf((*tensorcore.Table)(nil)),
		"TableButton":  reflect.ValueOf((*tensorcore.TableButton)(nil)),
		"TensorButton": reflect.ValueOf((*tensorcore.TensorButton)(nil)),
		"TensorEditor": reflect.ValueOf((*tensorcore.TensorEditor)(nil)),
		"TensorGrid":   reflect.ValueOf((*tensorcore.TensorGrid)(nil)),
	}
}
