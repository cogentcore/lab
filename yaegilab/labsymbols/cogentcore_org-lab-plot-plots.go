// Code generated by 'yaegi extract cogentcore.org/lab/plot/plots'. DO NOT EDIT.

package labsymbols

import (
	"cogentcore.org/lab/plot/plots"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/lab/plot/plots/plots"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BarType":        reflect.ValueOf(constant.MakeFromLiteral("\"Bar\"", token.STRING, 0)),
		"LabelsType":     reflect.ValueOf(constant.MakeFromLiteral("\"Labels\"", token.STRING, 0)),
		"NewBar":         reflect.ValueOf(plots.NewBar),
		"NewLabels":      reflect.ValueOf(plots.NewLabels),
		"NewLine":        reflect.ValueOf(plots.NewLine),
		"NewPointLine":   reflect.ValueOf(plots.NewPointLine),
		"NewScatter":     reflect.ValueOf(plots.NewScatter),
		"NewXErrorBars":  reflect.ValueOf(plots.NewXErrorBars),
		"NewXY":          reflect.ValueOf(plots.NewXY),
		"NewYErrorBars":  reflect.ValueOf(plots.NewYErrorBars),
		"XErrorBarsType": reflect.ValueOf(constant.MakeFromLiteral("\"XErrorBars\"", token.STRING, 0)),
		"XYType":         reflect.ValueOf(constant.MakeFromLiteral("\"XY\"", token.STRING, 0)),
		"YErrorBarsType": reflect.ValueOf(constant.MakeFromLiteral("\"YErrorBars\"", token.STRING, 0)),

		// type definitions
		"Bar":        reflect.ValueOf((*plots.Bar)(nil)),
		"Labels":     reflect.ValueOf((*plots.Labels)(nil)),
		"XErrorBars": reflect.ValueOf((*plots.XErrorBars)(nil)),
		"XY":         reflect.ValueOf((*plots.XY)(nil)),
		"YErrorBars": reflect.ValueOf((*plots.YErrorBars)(nil)),
	}
}
