// Code generated by 'yaegi extract cogentcore.org/lab/stats/cluster'. DO NOT EDIT.

package labsymbols

import (
	"cogentcore.org/lab/stats/cluster"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/lab/stats/cluster/cluster"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Avg":           reflect.ValueOf(cluster.Avg),
		"AvgFunc":       reflect.ValueOf(cluster.AvgFunc),
		"Call":          reflect.ValueOf(cluster.Call),
		"Cluster":       reflect.ValueOf(cluster.Cluster),
		"Contrast":      reflect.ValueOf(cluster.Contrast),
		"ContrastFunc":  reflect.ValueOf(cluster.ContrastFunc),
		"Funcs":         reflect.ValueOf(&cluster.Funcs).Elem(),
		"Glom":          reflect.ValueOf(cluster.Glom),
		"InitAllLeaves": reflect.ValueOf(cluster.InitAllLeaves),
		"Max":           reflect.ValueOf(cluster.Max),
		"MaxFunc":       reflect.ValueOf(cluster.MaxFunc),
		"MetricsN":      reflect.ValueOf(cluster.MetricsN),
		"MetricsValues": reflect.ValueOf(cluster.MetricsValues),
		"Min":           reflect.ValueOf(cluster.Min),
		"MinFunc":       reflect.ValueOf(cluster.MinFunc),
		"NewNode":       reflect.ValueOf(cluster.NewNode),
		"Plot":          reflect.ValueOf(cluster.Plot),

		// type definitions
		"MetricFunc": reflect.ValueOf((*cluster.MetricFunc)(nil)),
		"Metrics":    reflect.ValueOf((*cluster.Metrics)(nil)),
		"Node":       reflect.ValueOf((*cluster.Node)(nil)),
	}
}
