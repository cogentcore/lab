// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: baremetal/baremetal.proto

package baremetal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status are the job status values.
type Status int32

const (
	// NoStatus is the unknown status state.
	Status_NoStatus Status = 0
	// Pending means the job has been submitted, but not yet run.
	Status_Pending Status = 1
	// Running means the job is running.
	Status_Running Status = 2
	// Completed means the job finished on its own, with no error status.
	Status_Completed Status = 3
	// Canceled means the job was canceled by the user.
	Status_Canceled Status = 4
	// Errored means the job quit with an error
	Status_Errored Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "NoStatus",
		1: "Pending",
		2: "Running",
		3: "Completed",
		4: "Canceled",
		5: "Errored",
	}
	Status_value = map[string]int32{
		"NoStatus":  0,
		"Pending":   1,
		"Running":   2,
		"Completed": 3,
		"Canceled":  4,
		"Errored":   5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_baremetal_baremetal_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_baremetal_baremetal_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_baremetal_baremetal_proto_rawDescGZIP(), []int{0}
}

// Submission is a job submission.
type Submission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source is info about the source of the job, e.g., simrun sim project.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Path is the path from the SSH home directory to launch the job in.
	// This path will be created on the server when the job is run.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Script is name of the job script to run, which must be at the top level
	// within the given tar file.
	Script string `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	// ResultsGlob is a glob expression for the result files to get back
	// from the server (e.g., *.tsv). job.out is automatically included as well,
	// which has the job stdout, stederr output.
	ResultsGlob string `protobuf:"bytes,4,opt,name=resultsGlob,proto3" json:"resultsGlob,omitempty"`
	// Files is the gzipped tar file of the job files set at submission.
	Files         []byte `protobuf:"bytes,5,opt,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_baremetal_baremetal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_baremetal_baremetal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_baremetal_baremetal_proto_rawDescGZIP(), []int{0}
}

func (x *Submission) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Submission) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Submission) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *Submission) GetResultsGlob() string {
	if x != nil {
		return x.ResultsGlob
	}
	return ""
}

func (x *Submission) GetFiles() []byte {
	if x != nil {
		return x.Files
	}
	return nil
}

// Job is one bare metal job.
type Job struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the overall baremetal unique job ID number.
	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Status is the current status of the job.
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=baremetal.Status" json:"status,omitempty"`
	// Source is info about the source of the job, e.g., simrun sim project.
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Path is the path from the SSH home directory to launch the job in.
	// This path will be created on the server when the job is run.
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Script is name of the job script to run, which must be at the top level
	// within the given tar file.
	Script string `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	// Files is the gzipped tar file of the job files set at submission.
	Files []byte `protobuf:"bytes,6,opt,name=files,proto3" json:"files,omitempty"`
	// ResultsGlob is a glob expression for the result files to get back
	// from the server (e.g., *.tsv). job.out is automatically included as well,
	// which has the job stdout, stederr output.
	ResultsGlob string `protobuf:"bytes,7,opt,name=resultsGlob,proto3" json:"resultsGlob,omitempty"`
	// Results is the gzipped tar file of the job result files, gathered
	// at completion or when queried for results.
	Results []byte `protobuf:"bytes,8,opt,name=results,proto3" json:"results,omitempty"`
	// Submit is the time submitted.
	Submit *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=submit,proto3" json:"submit,omitempty"`
	// Start is the time actually started.
	Start *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start,proto3" json:"start,omitempty"`
	// End is the time stopped running.
	End *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end,proto3" json:"end,omitempty"`
	// ServerName is the name of the server it is running / ran on. Empty for pending.
	ServerName string `protobuf:"bytes,12,opt,name=serverName,proto3" json:"serverName,omitempty"`
	// ServerGPU is the logical index of the GPU assigned to this job (0..N-1).
	ServerGPU int32 `protobuf:"varint,13,opt,name=serverGPU,proto3" json:"serverGPU,omitempty"`
	// PID is the process id of the job script.
	PID           int64 `protobuf:"varint,14,opt,name=PID,proto3" json:"PID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_baremetal_baremetal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_baremetal_baremetal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_baremetal_baremetal_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Job) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NoStatus
}

func (x *Job) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Job) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Job) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *Job) GetFiles() []byte {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Job) GetResultsGlob() string {
	if x != nil {
		return x.ResultsGlob
	}
	return ""
}

func (x *Job) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *Job) GetSubmit() *timestamppb.Timestamp {
	if x != nil {
		return x.Submit
	}
	return nil
}

func (x *Job) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Job) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Job) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Job) GetServerGPU() int32 {
	if x != nil {
		return x.ServerGPU
	}
	return 0
}

func (x *Job) GetPID() int64 {
	if x != nil {
		return x.PID
	}
	return 0
}

// JobList is a list of Jobs.
type JobList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*Job                 `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobList) Reset() {
	*x = JobList{}
	mi := &file_baremetal_baremetal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobList) ProtoMessage() {}

func (x *JobList) ProtoReflect() protoreflect.Message {
	mi := &file_baremetal_baremetal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobList.ProtoReflect.Descriptor instead.
func (*JobList) Descriptor() ([]byte, []int) {
	return file_baremetal_baremetal_proto_rawDescGZIP(), []int{2}
}

func (x *JobList) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// JobIDList is a list of unique job ID numbers
type JobIDList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobID         []int64                `protobuf:"varint,1,rep,packed,name=jobID,proto3" json:"jobID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobIDList) Reset() {
	*x = JobIDList{}
	mi := &file_baremetal_baremetal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIDList) ProtoMessage() {}

func (x *JobIDList) ProtoReflect() protoreflect.Message {
	mi := &file_baremetal_baremetal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIDList.ProtoReflect.Descriptor instead.
func (*JobIDList) Descriptor() ([]byte, []int) {
	return file_baremetal_baremetal_proto_rawDescGZIP(), []int{3}
}

func (x *JobIDList) GetJobID() []int64 {
	if x != nil {
		return x.JobID
	}
	return nil
}

// Error is an error message about an operation.
type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_baremetal_baremetal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_baremetal_baremetal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_baremetal_baremetal_proto_rawDescGZIP(), []int{4}
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_baremetal_baremetal_proto protoreflect.FileDescriptor

var file_baremetal_baremetal_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2f, 0x62, 0x61, 0x72, 0x65,
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x61, 0x72,
	0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22,
	0xba, 0x03, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65,
	0x74, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x50, 0x55, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x50, 0x55, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49,
	0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x07,
	0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x21, 0x0a, 0x09, 0x4a,
	0x6f, 0x62, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x1d,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x5a, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x10, 0x05, 0x32, 0xa1, 0x02, 0x0a, 0x09, 0x42, 0x61,
	0x72, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x12, 0x15, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x0e, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d,
	0x65, 0x74, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x12, 0x34, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x14, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74,
	0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x62,
	0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35,
	0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x2e, 0x62, 0x61,
	0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x4a, 0x6f,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x61,
	0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x31, 0x5a,
	0x2f, 0x63, 0x6f, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x61, 0x62, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x72,
	0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2f, 0x62, 0x61, 0x72, 0x65, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baremetal_baremetal_proto_rawDescOnce sync.Once
	file_baremetal_baremetal_proto_rawDescData = file_baremetal_baremetal_proto_rawDesc
)

func file_baremetal_baremetal_proto_rawDescGZIP() []byte {
	file_baremetal_baremetal_proto_rawDescOnce.Do(func() {
		file_baremetal_baremetal_proto_rawDescData = protoimpl.X.CompressGZIP(file_baremetal_baremetal_proto_rawDescData)
	})
	return file_baremetal_baremetal_proto_rawDescData
}

var file_baremetal_baremetal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_baremetal_baremetal_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_baremetal_baremetal_proto_goTypes = []any{
	(Status)(0),                   // 0: baremetal.Status
	(*Submission)(nil),            // 1: baremetal.Submission
	(*Job)(nil),                   // 2: baremetal.Job
	(*JobList)(nil),               // 3: baremetal.JobList
	(*JobIDList)(nil),             // 4: baremetal.JobIDList
	(*Error)(nil),                 // 5: baremetal.Error
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_baremetal_baremetal_proto_depIdxs = []int32{
	0,  // 0: baremetal.Job.status:type_name -> baremetal.Status
	6,  // 1: baremetal.Job.submit:type_name -> google.protobuf.Timestamp
	6,  // 2: baremetal.Job.start:type_name -> google.protobuf.Timestamp
	6,  // 3: baremetal.Job.end:type_name -> google.protobuf.Timestamp
	2,  // 4: baremetal.JobList.jobs:type_name -> baremetal.Job
	1,  // 5: baremetal.BareMetal.Submit:input_type -> baremetal.Submission
	4,  // 6: baremetal.BareMetal.CancelJobs:input_type -> baremetal.JobIDList
	4,  // 7: baremetal.BareMetal.JobStatus:input_type -> baremetal.JobIDList
	4,  // 8: baremetal.BareMetal.FetchResults:input_type -> baremetal.JobIDList
	7,  // 9: baremetal.BareMetal.UpdateJobs:input_type -> google.protobuf.Empty
	2,  // 10: baremetal.BareMetal.Submit:output_type -> baremetal.Job
	5,  // 11: baremetal.BareMetal.CancelJobs:output_type -> baremetal.Error
	3,  // 12: baremetal.BareMetal.JobStatus:output_type -> baremetal.JobList
	3,  // 13: baremetal.BareMetal.FetchResults:output_type -> baremetal.JobList
	7,  // 14: baremetal.BareMetal.UpdateJobs:output_type -> google.protobuf.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_baremetal_baremetal_proto_init() }
func file_baremetal_baremetal_proto_init() {
	if File_baremetal_baremetal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baremetal_baremetal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_baremetal_baremetal_proto_goTypes,
		DependencyIndexes: file_baremetal_baremetal_proto_depIdxs,
		EnumInfos:         file_baremetal_baremetal_proto_enumTypes,
		MessageInfos:      file_baremetal_baremetal_proto_msgTypes,
	}.Build()
	File_baremetal_baremetal_proto = out.File
	file_baremetal_baremetal_proto_rawDesc = nil
	file_baremetal_baremetal_proto_goTypes = nil
	file_baremetal_baremetal_proto_depIdxs = nil
}
